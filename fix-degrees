#!/usr/bin/env python3
#
# Used to format temperatures in recipes.

import re
from pathlib import Path
from typing import Final

RECIPES_DIR: Final[Path] = Path(__file__).parent / "recipes"
TEMPERATURE: Final[re.Pattern] = re.compile(r"(\d+)\s?([CF])\b")


def main():
    for recipe in RECIPES_DIR.iterdir():
        if recipe.suffix != ".md":
            continue

        print()
        print()
        print(f"Processing {recipe}...")

        output = ""
        with open(recipe, "r") as f:
            for line in f.readlines():
                reformatted_line = re.sub(TEMPERATURE, format_temperature, line)

                if line != reformatted_line:
                    output += prompt_for_replace_line(line, reformatted_line)
                else:
                    output += line

        with open(recipe, "w") as f:
            f.write(output)


def format_temperature(match: re.Match) -> str:
    return f"{match.group(1)}Â°{match.group(2)}"


def prompt_for_replace_line(original: str, new: str) -> str:
    print()
    print(f"Original: {original.strip()}")
    print(f"New:      {new.strip()}")
    accept = input("Accept changes? [Y/n]")

    if accept in ["y", "Y", ""]:
        return new

    return original


if __name__ == "__main__":
    main()
